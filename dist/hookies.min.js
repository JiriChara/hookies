/*! hookies 2014-10-17 */
!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["exports"],function(c){a.Backbone=b(a,c)}):"undefined"!=typeof exports?b(a,exports):a.Hookies=b(a,{})}(this,function(a,b){"use strict";var c=a.Hookies;b.VERSION="1.0.2",b.noConflict=function(){return a.Hookies=c,this};var d=Array.isArray||function(a){return"[object Array]"===Object.prototype.toString.call(a)},e=function(a){return"[object String]"===Object.prototype.toString.call(a)},f=function(a){return"[object Function]"===Object.prototype.toString.call(a)};"function"!=typeof/./&&(f=function(a){return"function"==typeof a||!1});var g=function(a){var b=typeof a;return"function"===b||"object"===b&&!!a},h=function(a,b,c,d){if(f(a)){var e=function(){a.apply(b,d)};c===!0?e():setTimeout(function(){e()},0)}};b.mixin=function(a){if(!g(a))throw new Error("Base object must be an object. Got: "+a);return a.hookies=new b.Hooks(a),this},b.Hooks=function(a){this.hooks={},this.hookiesBase=a||{}};var i=function(a){if(!e(a))throw new Error("Event name must be a string. Got: "+a+".")};return b.Hooks.prototype.on=function(a){var b,c,e=Array.prototype.slice.call(arguments,0);if(e.shift(),i(a),0===e.length||e.length>2)throw new Error("Wrong number of arguments.");if(2===e.length){if(!g(e[0]))throw new Error("Second argument must be an object.");c=e[0],e.shift()}if(!f(e[0]))throw new Error((c?"Third":"Second")+" argument must be a function.");b={context:c||null,fn:e[0]},d(this.hooks[a])||(this.hooks[a]=[]),this.hooks[a].push(b)},b.Hooks.prototype.trigger=function(a){var b,c,d,f,j=Array.prototype.slice.call(arguments,0),k=this;if(g(a)){if(!e(a.name))throw new Error("Event object must contain name.");b=a.context,f=a.sync,a=a.name}j.shift(),i(a);for(c in this.hooks[a]||[])this.hooks.hasOwnProperty(a)&&(d=this.hooks[a][c],g(d)&&h(d.fn,b||d.context||k.hookiesBase,!!f,j))},b.Hooks.prototype.off=function(a){var b=this.hooks[a];d(b)&&b.length>0&&(this.hooks[a]=[])},b.Hooks.prototype.offAll=function(){this.hooks={}},b});